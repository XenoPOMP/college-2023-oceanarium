@import "src/assets/styles/templates";

.menu {
  @extend %uiGrid;
  @extend %mainFont;

  background: rgba(98, 160, 255, 1);
  font-size: 20px;
  // padding: 1.25em 0;
  position: sticky;
  top: 0;
  z-index: 2000;
  border-bottom: 1px solid white;

  &.localization {
    &.ru {
      @media (max-width: 1134px) {
        font-size: 18px;
      }

      @media (max-width: 887px) {
        font-size: 16px;
      }
    }

    &.kz {
      @media (max-width: 1134px) {
        font-size: 18px;
      }

      @media (max-width: 887px) {
        font-size: 16px;
      }
    }
  }

  .link {
    @extend %light;
    @extend %flexCenter;
    @extend %notSelectable;
    $borderColor: 1px solid rgba(255, 255, 255, 0.45);

    background: rgba(98, 160, 255, 1);
    padding: 1.25em 0;
    position: relative;
    text-align: center;
    cursor: pointer;
    color: white;
    font-size: 1em;
    transition: filter .15s ease;

    // Text content
    span {
      @extend %flexCenter;
      width: 100%;
      border-right: $borderColor;
    }

    // Not render border of last link
    &:last-of-type {
      span {
        border-right: none;
      }
    }

    // Show dropdown on hover
    &:hover {
      .dropdown {
        opacity: 1;
        pointer-events: all;
      }
    }

    // Hover effect for each link that has not dropdown
    &:not(:has(> .dropdown)) {
      &:hover {
        background: #4476BE;
      }
    }

    // Dropdown styles
    & > .dropdown {
      border-top: 1px solid white;
      opacity: 0;
      pointer-events: none;
      position: absolute;
      top: 100%;
      left: 0;
      width: 100%;
      transition: .07s ease;

      & > .link {
        padding: 0;

        // Hide border of last element in dropdown
        &:last-of-type {
          span {
            border-bottom: none;
          }
        }

        span {
          border-right: none;
          border-bottom: 1px solid white;
          margin: 0 1em;
          height: 100%;
          padding: 1.25em 0;
        }
      }
    }
  }
}